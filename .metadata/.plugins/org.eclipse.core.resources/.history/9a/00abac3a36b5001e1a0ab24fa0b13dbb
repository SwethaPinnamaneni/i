package com.icici.controllers;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import com.icici.entities.Policy;
import com.icici.exceptions.ExceptionHandlers;
import com.icici.services.PolicyService;


@RestController
@CrossOrigin(origins = "*")
public class PolicyController {
	
	private static final Logger logger = LoggerFactory.getLogger(PolicyController.class);
	
	@Autowired
	private PolicyService policyService;
	
	@PostMapping("/policy")
	public ResponseEntity<Policy> savePolicy(@RequestBody Policy policy) {
		try {
			Policy savedPolicy = policyService.savePolicy(policy);
			logger.info("Policy saved successfully");
			return ResponseEntity.ok(savedPolicy);
		} catch (Exception e) {
			logger.error("Error saving policy: "+e.getMessage());
			throw new ExceptionHandlers("Error saving policy: "+e.getMessage());
		}
	}
	
	@GetMapping("/getPolicyDetails")
	public ResponseEntity<Policy> getPolicy(@RequestParam("policyId") int policyId) {
		try {
			Policy policy = policyService.getPolicy(policyId);
			logger.info("Policy retrieved successfully");
			return ResponseEntity.ok(policy);
		} catch (Exception e) {
			logger.error("Error retrieving policy: "+e.getMessage());
			throw new ExceptionHandlers("Error retrieving policy: "+e.getMessage());
		}
	}
	
	@GetMapping("/getBase")
	public int findBaseByFreqPT(@RequestParam("frequency") String frequency, @RequestParam("policyTerm") int policyTerm) {
		try {
			Policy basePremium = policyService.getBaseByFreqPT(frequency, policyTerm);
			logger.info("Base premium retrieved successfully");
			return basePremium.getBasePremium();
		} catch (Exception e) {
			logger.error("Error retrieving base premium: "+e.getMessage());
			throw new ExceptionHandlers("Error retrieving base premium: "+e.getMessage());
		}
	}
	@GetMapping("/getall")
	public List<Policy> getAllCustomers(){ //getting all the records from the map
		return policyService.getallPolicies();
		
	}
}
